if(Cfin) print("Caudal fin found")
if(Dfin) print("Dorsal fin found")
if(D2fin) print("Second dorsal fin found")
if(Afin) print("Anal fin found")
if(Ceph) print("Cephalofoil found")
### Image Reading
img.lat <- imager::load.image(paste0("./",Folder,"/",BodyL.File,File.Ext))
img.dv <- imager::load.image(paste0("./",Folder,"/",BodyV.File,File.Ext))
if(Ffin) img.ff <- imager::load.image(paste0("./",Folder,"/",Ffin.File,File.Ext))
if(Hfin) img.hf <- imager::load.image(paste0("./",Folder,"/",Hfin.File,File.Ext))
if(Cfin) img.cf <- imager::load.image(paste0("./",Folder,"/",Cfin.File,File.Ext))
if(Dfin) img.df <- imager::load.image(paste0("./",Folder,"/",Dfin.File,File.Ext))
if(D2fin) img.d2 <- imager::load.image(paste0("./",Folder,"/",D2fin.File,File.Ext))
if(Afin) img.af <- imager::load.image(paste0("./",Folder,"/",Afin.File,File.Ext))
if(Ceph) img.ce <- imager::load.image(paste0("./",Folder,"/",Ceph.File,File.Ext))
### Make the images black and white
mx.lat <- t(round(img.lat[,,1,1],0))
mx.dv <- t(round(img.dv[,,1,1],0))
if(Ffin) mx.ff <- t(round(img.ff[,,1,1],0))
if(Hfin) mx.hf <- t(round(img.hf[,,1,1],0))
if(Cfin) mx.cf <- t(round(img.cf[,,1,1],0))
if(Dfin) mx.df <- t(round(img.df[,,1,1],0))
if(D2fin) mx.d2 <- t(round(img.d2[,,1,1],0))
if(Afin) mx.af <- t(round(img.af[,,1,1],0))
if(Ceph) mx.ce <- t(round(img.ce[,,1,1],0))
### Outline Digitization
dat.lat <- topbottom(mx.lat,Add.Tip=Add.Tip,tip.radius=tip.radius)
dat.dv <- topbottom(mx.dv,Add.Tip=Add.Tip,tip.radius=tip.radius)
if(Ffin) dat.ff <- antpost(mx.ff,Add.Tip=Add.Tip,Origin="Bottom")
if(Hfin) dat.hf <- antpost(mx.hf,Add.Tip=Add.Tip,Origin="Bottom")
if(Cfin) dat.cf <- antpost(mx.cf,Add.Tip=Add.Tip)
if(Dfin) dat.df <- antpost(mx.df,Add.Tip=Add.Tip)
if(D2fin) dat.d2 <- antpost(mx.d2,Add.Tip=Add.Tip)
if(Afin) dat.af <- antpost(mx.af,Add.Tip=Add.Tip,Origin="Bottom")
if(Ceph) dat.ce <- antpost(mx.ce,Add.Tip=Add.Tip)
### Keeping a record of original body length in pixels
bal.px <- nrow(dat.lat)
px.L <- body.axis.l/nrow(dat.lat)
if(Add.Tip) px.L <- body.axis.l/nrow(dat.lat-2)
### Whether to translate all elements vertically to center the body
y.shift <- 0
if(Body.Y.Centering) y.shift <- -mean(range(dat.lat[,2:3]))
### Interpolation, if Interpolate=TRUE
if(Interpolate){
dat.lat <- locfit_interpolate(dat.lat,Nseg=N.Body.Slice,Use.Weight=F,n.out=n.body.slice,nn=nn.b)
dat.dv <-locfit_interpolate(dat.dv,Nseg=N.Body.Slice,Use.Weight=F,n.out=n.body.slice,nn=nn.b)
if(Ffin) dat.ff <- locfit_interpolate(dat.ff,Nseg=N.Fin.Slice,n.out=n.fin.slice,nn=nn.f)
if(Hfin) dat.hf <- locfit_interpolate(dat.hf,Nseg=N.Fin.Slice,n.out=n.fin.slice,nn=nn.f)
if(Cfin) dat.cf <- locfit_interpolate(dat.cf,Nseg=N.Fin.Slice,n.out=n.fin.slice,nn=nn.f)
if(Dfin) dat.df <- locfit_interpolate(dat.df,Nseg=N.Fin.Slice,n.out=n.fin.slice,nn=nn.f)
if(D2fin) dat.d2 <- locfit_interpolate(dat.d2,Nseg=N.Fin.Slice,n.out=n.fin.slice,nn=nn.f)
if(Afin) dat.af <- locfit_interpolate(dat.af,Nseg=N.Fin.Slice,n.out=n.fin.slice,nn=nn.f)
if(Ceph) dat.ce <- locfit_interpolate(dat.ce,Nseg=N.Fin.Slice,n.out=n.fin.slice,nn=nn.f)
}
### Body when n=n1
mesh.body.1 <- mesh_body(dat.lat,dat.dv,nb=n1,X.center=0,Y.center=y.shift,
Z.onset=0,a.per.slice=a.per.slice,Mesh.Col=Mesh.Col,tol=Clean.Tol)
if(Save.Part.Mesh) Rvcg::vcgPlyWrite(mesh.body.1,paste0("./",Folder,"/Body_",n1,"_",
Fname.Add,".ply"),writeCol=F,writeNormals=T)
results[1,2] <- Rvcg::vcgArea(mesh.body.1)
try(results[1,1] <- Rvcg::vcgVolume(mesh.body.1))
### Body when n=n2
mesh.body.2 <- mesh_body(dat.lat,dat.dv,nb=n2,X.center=0,Y.center=y.shift,
Z.onset=0,a.per.slice=a.per.slice,Mesh.Col=Mesh.Col,tol=Clean.Tol)
if(Save.Part.Mesh) Rvcg::vcgPlyWrite(mesh.body.2,paste0("./",Folder,"/Body_",n2,"_",
Fname.Add,".ply"),writeCol=F,writeNormals=T)
results[2,2] <- Rvcg::vcgArea(mesh.body.2)
try(results[2,1] <- Rvcg::vcgVolume(mesh.body.2))
### Caudal Fluke
# Xc, Yc, Zc    Global coordinates for the caudal fluke.
# .onset        Anterior margin center of the fluke in global coordinate
if(Cfin){
cfin.atip.y <- floor(colMeans(dat.cf[dat.cf[,2]==min(dat.cf[,2]),])[1])
cfin.base <- c(0, cfin.adj.up + cfin.atip.y + y.shift, cfin.onset * bal.px)
Yc.onset <- cfin.base[2] #+dat.lat[nrow(dat.lat),4]
Xc.onset <- cfin.base[1]
Zc.onset <- cfin.base[3]
mesh.cf <- mesh_foil(dat.cf,tf=cfin.thick,X.onset=Xc.onset,Y.onset=Yc.onset,
Z.onset=Zc.onset,tol=Clean.Tol,Thickest=0.5,Center=T,
a.per.slice=a.per.slice,Mesh.Col=Mesh.Col)
Mesh.Cfin <- mesh.cf$Mesh
### Fin roll, pitch, and yaw
#roll
Mesh.Cfin <- Morpho::rotaxis3d(Mesh.Cfin,cfin.base+c(0,cfin.atip.y + y.shift,100),
cfin.base+c(0,cfin.atip.y + y.shift,-100),cfin.roll)
#pitch
Mesh.Cfin <- Morpho::rotaxis3d(Mesh.Cfin,cfin.base+c(100,cfin.atip.y + y.shift,0),
cfin.base+c(-100,cfin.atip.y + y.shift,0),cfin.pitch)
#yaw
Mesh.Cfin <- Morpho::rotaxis3d(Mesh.Cfin,cfin.base+c(0,100,0),
cfin.base+c(0,-100,0),cfin.yaw)
### Mesh saving
if(Save.Part.Mesh) Rvcg::vcgPlyWrite(Mesh.Cfin,paste0("./",Folder,"/CaudalFluke_",
Fname.Add,".ply"),writeCol=F,writeNormals=F)
### Measure
results[3,2] <- Rvcg::vcgArea(Mesh.Cfin)
try(results[3,1] <- Rvcg::vcgVolume(Mesh.Cfin))
}
### Dorsal Fin
# Xd, Yd, Zd    Global coordinates for the dorsal fin.
# .onset        Antero-ventral corner of the dorsal fin in global coordinate
if(Dfin){
dfin.atip.y <- floor(colMeans(dat.df[dat.df[,2]==min(dat.df[,2]),])[1])
dfin.bheight <- -dat.lat[floor(dfin.onset*bal.px),2] - y.shift
dfin.base <- c(0, dfin.adj.up + dfin.bheight -dfin.atip.y, dfin.onset * bal.px)
Zd.onset <- dfin.base[3]
Xd.onset <- dfin.base[1]
Yd.onset <- dfin.base[2]
mesh.df <- mesh_foil(dat.df,tf=dfin.thick,X.onset=Xd.onset,Y.onset=Yd.onset,
Z.onset=Zd.onset,tol=Clean.Tol,Thickest=0.1,Center=F,
a.per.slice=a.per.slice,Mesh.Col=Mesh.Col)
Mesh.Dfin <- mesh.df$Mesh
### Fin roll, pitch, and yaw
#roll
Mesh.Dfin <- Morpho::rotaxis3d(Mesh.Dfin,dfin.base+c(0,0,100),
dfin.base+c(0,0,-100),dfin.roll)
#pitch
Mesh.Dfin <- Morpho::rotaxis3d(Mesh.Dfin,dfin.base+c(100,0,0),
dfin.base+c(-100,0,0),dfin.pitch)
#yaw
Mesh.Dfin <- Morpho::rotaxis3d(Mesh.Dfin,dfin.base+c(0,100,0),
dfin.base+c(0,-100,0),dfin.yaw)
### Mesh saving
if(Save.Part.Mesh) Rvcg::vcgPlyWrite(Mesh.Dfin,paste0("./",Folder,"/DorsalFin_",
name.Add,".ply"),writeCol=F,writeNormals=F)
### Measure
results[4,2] <- Rvcg::vcgArea(Mesh.Dfin)
try(results[4,1] <- Rvcg::vcgVolume(Mesh.Dfin))
}
### Dorsal Fin 2 (Second dorsal fin)
if(D2fin){
d2fin.atip.y <- floor(colMeans(dat.d2[dat.d2[,2]==min(dat.d2[,2]),])[1])
d2fin.bheight <- -dat.lat[floor(d2fin.onset*bal.px),2] - y.shift
d2fin.base <- c(0, d2fin.adj.up + d2fin.bheight -d2fin.atip.y, d2fin.onset * bal.px)
Zd2.onset <- d2fin.base[3]
Xd2.onset <- d2fin.base[1]
Yd2.onset <- d2fin.base[2]
mesh.d2 <- mesh_foil(dat.d2,tf=d2fin.thick,X.onset=Xd2.onset,Y.onset=Yd2.onset,
Z.onset=Zd2.onset,tol=Clean.Tol,Thickest=0.1,Center=F,
a.per.slice=a.per.slice,Mesh.Col=Mesh.Col)
Mesh.D2fin <- mesh.d2$Mesh
### Fin roll, pitch, and yaw
#roll
Mesh.D2fin <- Morpho::rotaxis3d(Mesh.D2fin,d2fin.base+c(0,0,100),
d2fin.base+c(0,0,-100),d2fin.roll)
#pitch
Mesh.D2fin <- Morpho::rotaxis3d(Mesh.D2fin,d2fin.base+c(100,0,0),
d2fin.base+c(-100,0,0),d2fin.pitch)
#yaw
Mesh.D2fin <- Morpho::rotaxis3d(Mesh.D2fin,d2fin.base+c(0,100,0),
d2fin.base+c(0,-100,0),d2fin.yaw)
### Mesh saving
if(Save.Part.Mesh) Rvcg::vcgPlyWrite(Mesh.D2fin,paste0("./",Folder,"/DorsalFin2_",Fname.Add,".ply"),
writeCol=F,writeNormals=F)
### Measure
results[9,2] <- Rvcg::vcgArea(Mesh.D2fin)
try(results[9,1] <- Rvcg::vcgVolume(Mesh.D2fin))
}
### Anal Fin
# Xa, Ya, Za    Global coordinates for the anal fin.
# .onset        Antero-ventral corner of the anal fin in global coordinate
if(Afin){
afin.atip.y <- floor(colMeans(dat.af[dat.af[,2]==min(dat.af[,2]),])[1])
afin.bheight <- -dat.lat[floor(afin.onset*bal.px),3] - y.shift
afin.base <- c(0, afin.adj.up + afin.bheight -afin.atip.y, afin.onset * bal.px)
Za.onset <- afin.base[3]
Xa.onset <- afin.base[1]
Ya.onset <- afin.base[2]
mesh.af <- mesh_foil(dat.af,tf=afin.thick,X.onset=Xa.onset,Y.onset=Ya.onset,
Z.onset=Za.onset,tol=Clean.Tol,Thickest=0.9,Center=F,
a.per.slice=a.per.slice,Mesh.Col=Mesh.Col)
Mesh.Afin <- mesh.af$Mesh
### Fin roll, pitch, and yaw
#roll
Mesh.Afin <- Morpho::rotaxis3d(Mesh.Afin,afin.base+c(0,0,100),
afin.base+c(0,0,-100),afin.roll)
#pitch
Mesh.Afin <- Morpho::rotaxis3d(Mesh.Afin,afin.base+c(100,0,0),
afin.base+c(-100,0,0),afin.pitch)
#yaw
Mesh.Afin <- Morpho::rotaxis3d(Mesh.Afin,afin.base+c(0,100,0),
afin.base+c(0,-100,0),afin.yaw)
# Mesh saving
if(Save.Part.Mesh) Rvcg::vcgPlyWrite( Mesh.Afin,paste0("./",Folder,"/AnalFin_",Fname.Add,".ply"),
writeCol=F,writeNormals=F)
### Measure
results[10,2] <- Rvcg::vcgArea( Mesh.Afin)
try(results[10,1] <- Rvcg::vcgVolume( Mesh.Afin))
}
# ceph.atip.y <- floor(colMeans(dat.ce[dat.ce[,2]==min(dat.ce[,2]),])[1])
ceph.atip.y <- dist(range(dat.ce[,1]))/2
ceph.base <- c(0, ceph.adj.up + ceph.atip.y + y.shift, ceph.onset * bal.px)
Ye.onset <- ceph.base[2]
Xe.onset <- ceph.base[1]
Ze.onset <- ceph.base[3]
mesh.ce <- mesh_foil(dat.ce,tf=ceph.thick,X.onset=Xe.onset,Y.onset=Ye.onset,
Z.onset=Ze.onset,tol=Clean.Tol,Thickest=0.5,Center=T,
a.per.slice=a.per.slice,Mesh.Col=Mesh.Col,Cephalofoil=T)
Mesh.Ceph <- mesh.ce$Mesh
ceph.atip.y
ceph.base
matplot(dat.ce)
ceph.atip.y <- dist(range(dat.ce[,1]))/2
ceph.base <- c(0, ceph.adj.up - ceph.atip.y + y.shift, ceph.onset * bal.px)
Ye.onset <- ceph.base[2]
Xe.onset <- ceph.base[1]
Ze.onset <- ceph.base[3]
mesh.ce <- mesh_foil(dat.ce,tf=ceph.thick,X.onset=Xe.onset,Y.onset=Ye.onset,
Z.onset=Ze.onset,tol=Clean.Tol,Thickest=0.5,Center=T,
a.per.slice=a.per.slice,Mesh.Col=Mesh.Col,Cephalofoil=T)
Mesh.Ceph <- mesh.ce$Mesh
### Fin roll, pitch, and yaw
#roll
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(0,ceph.atip.y + y.shift,100),
ceph.base+c(0,ceph.atip.y + y.shift,-100),ceph.roll)
#pitch
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(100,ceph.atip.y + y.shift,0),
ceph.base+c(-100,ceph.atip.y + y.shift,0),ceph.pitch)
#yaw
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(0,100,0),
ceph.base+c(0,-100,0),ceph.yaw)
Mesh.whole <- merge(mesh.body.1,Mesh.Ceph)
plot3d(Mesh.whole,col="royalblue",asp="iso")
library(rgl)
ceph.atip.y <- dist(range(dat.ce[,1]))/2
ceph.base <- c(0, ceph.adj.up - ceph.atip.y + y.shift, ceph.onset * bal.px)
Ye.onset <- ceph.base[2]
Xe.onset <- ceph.base[1]
Ze.onset <- ceph.base[3]
mesh.ce <- mesh_foil(dat.ce,tf=ceph.thick,X.onset=Xe.onset,Y.onset=Ye.onset,
Z.onset=Ze.onset,tol=Clean.Tol,Thickest=0.5,Center=T,
a.per.slice=a.per.slice,Mesh.Col=Mesh.Col,Cephalofoil=T)
Mesh.Ceph <- mesh.ce$Mesh
### Fin roll, pitch, and yaw
#roll
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(0,ceph.atip.y + y.shift,100),
ceph.base+c(0,ceph.atip.y + y.shift,-100),ceph.roll)
#pitch
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(100,ceph.atip.y + y.shift,0),
ceph.base+c(-100,ceph.atip.y + y.shift,0),ceph.pitch)
#yaw
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(0,100,0),
ceph.base+c(0,-100,0),ceph.yaw)
Mesh.whole <- merge(mesh.body.1,Mesh.Ceph)
plot3d(Mesh.whole,col="royalblue",asp="iso")
ceph.base
plot3d(Mesh.whole,col="royalblue",asp="iso")
ceph.roll=0
ceph.atip.y <- dist(range(dat.ce[,1]))/2
ceph.base <- c(0, ceph.adj.up - ceph.atip.y + y.shift, ceph.onset * bal.px)
Ye.onset <- ceph.base[2]
Xe.onset <- ceph.base[1]
Ze.onset <- ceph.base[3]
mesh.ce <- mesh_foil(dat.ce,tf=ceph.thick,X.onset=Xe.onset,Y.onset=Ye.onset,
Z.onset=Ze.onset,tol=Clean.Tol,Thickest=0.5,Center=T,
a.per.slice=a.per.slice,Mesh.Col=Mesh.Col,Cephalofoil=T)
Mesh.Ceph <- mesh.ce$Mesh
### Fin roll, pitch, and yaw
#roll
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(0,ceph.atip.y + y.shift,100),
ceph.base+c(0,ceph.atip.y + y.shift,-100),ceph.roll)
#pitch
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(100,ceph.atip.y + y.shift,0),
ceph.base+c(-100,ceph.atip.y + y.shift,0),ceph.pitch)
#yaw
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(0,100,0),
ceph.base+c(0,-100,0),ceph.yaw)
Mesh.whole <- merge(mesh.body.1,Mesh.Ceph)
plot3d(Mesh.whole,col="royalblue",asp="iso")
ceph.base
ceph.adj.up
ceph.atip.y
y.shift
ceph.atip.y <- dist(range(dat.ce[,1]))/2
ceph.base <- c(0, ceph.adj.up + y.shift, ceph.onset * bal.px)
Ye.onset <- ceph.base[2]
Xe.onset <- ceph.base[1]
Ze.onset <- ceph.base[3]
mesh.ce <- mesh_foil(dat.ce,tf=ceph.thick,X.onset=Xe.onset,Y.onset=Ye.onset,
Z.onset=Ze.onset,tol=Clean.Tol,Thickest=0.5,Center=T,
a.per.slice=a.per.slice,Mesh.Col=Mesh.Col,Cephalofoil=T)
Mesh.Ceph <- mesh.ce$Mesh
### Fin roll, pitch, and yaw
#roll
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(0,ceph.atip.y + y.shift,100),
ceph.base+c(0,ceph.atip.y + y.shift,-100),ceph.roll)
#pitch
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(100,ceph.atip.y + y.shift,0),
ceph.base+c(-100,ceph.atip.y + y.shift,0),ceph.pitch)
#yaw
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(0,100,0),
ceph.base+c(0,-100,0),ceph.yaw)
Mesh.whole <- merge(mesh.body.1,Mesh.Ceph)
plot3d(Mesh.whole,col="royalblue",asp="iso")
ceph.roll=0
ceph.atip.y <- dist(range(dat.ce[,1]))/2
ceph.base <- c(0, ceph.adj.up + y.shift, ceph.onset * bal.px)
Ye.onset <- ceph.base[2]
Xe.onset <- ceph.base[1]
Ze.onset <- ceph.base[3]
mesh.ce <- mesh_foil(dat.ce,tf=ceph.thick,X.onset=Xe.onset,Y.onset=Ye.onset,
Z.onset=Ze.onset,tol=Clean.Tol,Thickest=0.5,Center=T,
a.per.slice=a.per.slice,Mesh.Col=Mesh.Col,Cephalofoil=T)
Mesh.Ceph <- mesh.ce$Mesh
### Fin roll, pitch, and yaw
#roll
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(0,ceph.atip.y + y.shift,100),
ceph.base+c(0,ceph.atip.y + y.shift,-100),ceph.roll)
#pitch
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(100,ceph.atip.y + y.shift,0),
ceph.base+c(-100,ceph.atip.y + y.shift,0),ceph.pitch)
#yaw
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(0,100,0),
ceph.base+c(0,-100,0),ceph.yaw)
Mesh.whole <- merge(mesh.body.1,Mesh.Ceph)
plot3d(Mesh.whole,col="royalblue",asp="iso")
?tibble
library(tidyverse)
tibble()
?tibble
plot3d(Mesh.whole,col="royalblue",asp="iso")
ceph.atip.y
ceph.atip.y <- dist(range(dat.ce[,1]))/2
ceph.base <- c(0, ceph.adj.up-ceph.atip.y + y.shift, ceph.onset * bal.px)
Ye.onset <- ceph.base[2]
Xe.onset <- ceph.base[1]
Ze.onset <- ceph.base[3]
mesh.ce <- mesh_foil(dat.ce,tf=ceph.thick,X.onset=Xe.onset,Y.onset=Ye.onset,
Z.onset=Ze.onset,tol=Clean.Tol,Thickest=0.5,Center=T,
a.per.slice=a.per.slice,Mesh.Col=Mesh.Col,Cephalofoil=T)
Mesh.Ceph <- mesh.ce$Mesh
### Fin roll, pitch, and yaw
#roll
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(0,ceph.atip.y + y.shift,100),
ceph.base+c(0,0,-100),ceph.roll)
#pitch
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(100,ceph.atip.y + y.shift,0),
ceph.base+c(-100,0,0),ceph.pitch)
#yaw
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(0,100,0),
ceph.base+c(0,-100,0),ceph.yaw)
Mesh.whole <- merge(mesh.body.1,Mesh.Ceph)
plot3d(Mesh.whole,col="royalblue",asp="iso")
dat.ce
ceph.atip.y <- dist(range(dat.ce[,1]))/2
ceph.base <- c(0, ceph.adj.up, ceph.onset * bal.px)
Ye.onset <- ceph.base[2]
Xe.onset <- ceph.base[1]
Ze.onset <- ceph.base[3]
mesh.ce <- mesh_foil(dat.ce,tf=ceph.thick,X.onset=Xe.onset,Y.onset=Ye.onset,
Z.onset=Ze.onset,tol=Clean.Tol,Thickest=0.5,Center=T,
a.per.slice=a.per.slice,Mesh.Col=Mesh.Col,Cephalofoil=T)
Mesh.Ceph <- mesh.ce$Mesh
### Fin roll, pitch, and yaw
#roll
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(0,ceph.atip.y + y.shift,100),
ceph.base+c(0,0,-100),ceph.roll)
#pitch
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(100,ceph.atip.y + y.shift,0),
ceph.base+c(-100,0,0),ceph.pitch)
#yaw
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(0,100,0),
ceph.base+c(0,-100,0),ceph.yaw)
Mesh.whole <- merge(mesh.body.1,Mesh.Ceph)
plot3d(Mesh.whole,col="royalblue",asp="iso")
ceph.roll
ceph.atip.y <- dist(range(dat.ce[,1]))/2
ceph.base <- c(0, ceph.adj.up, ceph.onset * bal.px)
Ye.onset <- ceph.base[2]
Xe.onset <- ceph.base[1]
Ze.onset <- ceph.base[3]
mesh.ce <- mesh_foil(dat.ce,tf=ceph.thick,X.onset=Xe.onset,Y.onset=Ye.onset,
Z.onset=Ze.onset,tol=Clean.Tol,Thickest=0.5,Center=T,
a.per.slice=a.per.slice,Mesh.Col=Mesh.Col,Cephalofoil=T)
Mesh.Ceph <- mesh.ce$Mesh
### Fin roll, pitch, and yaw
#roll
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(0,ceph.atip.y + y.shift,100),
ceph.base+c(0,0,-100),ceph.roll)
#pitch
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(100,ceph.atip.y + y.shift,0),
ceph.base+c(-100,0,0),ceph.pitch)
#yaw
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(0,100,0),
ceph.base+c(0,-100,0),ceph.yaw)
Mesh.whole <- merge(mesh.body.1,Mesh.Ceph)
plot3d(Mesh.whole,col="royalblue",asp="iso")
ceph.roll=pi/2
ceph.atip.y <- dist(range(dat.ce[,1]))/2
ceph.base <- c(0, ceph.adj.up, ceph.onset * bal.px)
Ye.onset <- ceph.base[2]
Xe.onset <- ceph.base[1]
Ze.onset <- ceph.base[3]
mesh.ce <- mesh_foil(dat.ce,tf=ceph.thick,X.onset=Xe.onset,Y.onset=Ye.onset,
Z.onset=Ze.onset,tol=Clean.Tol,Thickest=0.5,Center=T,
a.per.slice=a.per.slice,Mesh.Col=Mesh.Col,Cephalofoil=T)
Mesh.Ceph <- mesh.ce$Mesh
### Fin roll, pitch, and yaw
#roll
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(0,ceph.atip.y + y.shift,100),
ceph.base+c(0,0,-100),ceph.roll)
#pitch
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(100,ceph.atip.y + y.shift,0),
ceph.base+c(-100,0,0),ceph.pitch)
#yaw
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(0,100,0),
ceph.base+c(0,-100,0),ceph.yaw)
Mesh.whole <- merge(mesh.body.1,Mesh.Ceph)
plot3d(Mesh.whole,col="royalblue",asp="iso")
# ceph.atip.y <- floor(colMeans(dat.ce[dat.ce[,2]==min(dat.ce[,2]),])[1])
ceph.atip.y <- dist(range(dat.ce[,1]))/2
ceph.base <- c(0, ceph.adj.up, ceph.onset * bal.px)
Ye.onset <- ceph.base[2]
Xe.onset <- ceph.base[1]
Ze.onset <- ceph.base[3]
mesh.ce <- mesh_foil(dat.ce,tf=ceph.thick,X.onset=Xe.onset,Y.onset=Ye.onset,
Z.onset=Ze.onset,tol=Clean.Tol,Thickest=0.5,Center=T,
a.per.slice=a.per.slice,Mesh.Col=Mesh.Col,Cephalofoil=T)
Mesh.Ceph <- mesh.ce$Mesh
### Fin roll, pitch, and yaw
#roll
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(0,0,100),
ceph.base+c(0,0,-100),ceph.roll)
#pitch
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(100,0,0),
ceph.base+c(-100,0,0),ceph.pitch)
#yaw
Mesh.Ceph <- Morpho::rotaxis3d(Mesh.Ceph,ceph.base+c(0,100,0),
ceph.base+c(0,-100,0),ceph.yaw)
Mesh.whole <- merge(mesh.body.1,Mesh.Ceph)
plot3d(Mesh.whole,col="royalblue",asp="iso")
ceph.base
devtools::load_all(".")
library(paleomass)
paleomass(Folder="Sphyrna",body.axis.l=2,n2=1.8,
ffin.onset=0.3, ffin.adj.up=60,ffin.adj.lat=-60,ffin.roll=pi/4,
ffin.pitch=pi*15/180,
hfin.onset=0.55,hfin.adj.up=60,hfin.adj.lat=-80,hfin.roll=pi/4,
hfin.thick=10,hfin.pitch=pi*10/180,
cfin.onset=0.92,cfin.adj.up=70,
dfin.onset=0.35,dfin.adj.up=0,dfin.pitch=0,
d2fin.onset=0.8,d2fin.adj.up=0,,d2fin.pitch=pi*10/180,d2fin.thick=10,
afin.onset=0.8,afin.adj.up=20,afin.pitch=pi*15/180,afin.thick=10,
ceph.onset=-0.045,ceph.adj.up=50,ceph.roll=pi/2) paleomass(Folder="Sphyrna",body.axis.l=2,n2=1.8,
paleomass(Folder="Sphyrna",body.axis.l=2,n2=1.8,
ffin.onset=0.3, ffin.adj.up=60,ffin.adj.lat=-60,ffin.roll=pi/4,
ffin.pitch=pi*15/180,
hfin.onset=0.55,hfin.adj.up=60,hfin.adj.lat=-80,hfin.roll=pi/4,
hfin.thick=10,hfin.pitch=pi*10/180,
cfin.onset=0.92,cfin.adj.up=70,
dfin.onset=0.35,dfin.adj.up=0,dfin.pitch=0,
d2fin.onset=0.8,d2fin.adj.up=0,,d2fin.pitch=pi*10/180,d2fin.thick=10,
afin.onset=0.8,afin.adj.up=20,afin.pitch=pi*15/180,afin.thick=10,
ceph.onset=-0.045,ceph.adj.up=50,ceph.roll=pi/2)
if(R.Version()$os == "linux-gnu"){
setwd("/mnt/p/My Documents/MANU/Paleomass2/R/")
} else {
setwd("P:/My Documents/MANU/Paleomass2/R/")
}
paleomass(Folder="Sphyrna",body.axis.l=2,n2=1.8,
ffin.onset=0.3, ffin.adj.up=60,ffin.adj.lat=-60,ffin.roll=pi/4,
ffin.pitch=pi*15/180,
hfin.onset=0.55,hfin.adj.up=60,hfin.adj.lat=-80,hfin.roll=pi/4,
hfin.thick=10,hfin.pitch=pi*10/180,
cfin.onset=0.92,cfin.adj.up=70,
dfin.onset=0.35,dfin.adj.up=0,dfin.pitch=0,
d2fin.onset=0.8,d2fin.adj.up=0,,d2fin.pitch=pi*10/180,d2fin.thick=10,
afin.onset=0.8,afin.adj.up=20,afin.pitch=pi*15/180,afin.thick=10,
ceph.onset=-0.045,ceph.adj.up=50,ceph.roll=pi/2)
paleomass(Folder="Sphyrna",body.axis.l=2,n2=1.8,
ffin.onset=0.3, ffin.adj.up=60,ffin.adj.lat=-60,ffin.roll=pi/4,
ffin.pitch=pi*15/180,
hfin.onset=0.55,hfin.adj.up=60,hfin.adj.lat=-80,hfin.roll=pi/4,
hfin.thick=10,hfin.pitch=pi*10/180,
cfin.onset=0.92,cfin.adj.up=70,
dfin.onset=0.35,dfin.adj.up=0,dfin.pitch=0,
d2fin.onset=0.8,d2fin.adj.up=0,,d2fin.pitch=pi*10/180,d2fin.thick=10,
afin.onset=0.8,afin.adj.up=20,afin.pitch=pi*15/180,afin.thick=10,
ceph.onset=-0.045,ceph.adj.up=50,ceph.roll=pi/2)
library(paleomass)
paleomass(Folder="Sphyrna",body.axis.l=2,n2=1.8,
ffin.onset=0.3, ffin.adj.up=60,ffin.adj.lat=-60,ffin.roll=pi/4,
ffin.pitch=pi*15/180,
hfin.onset=0.55,hfin.adj.up=60,hfin.adj.lat=-80,hfin.roll=pi/4,
hfin.thick=10,hfin.pitch=pi*10/180,
cfin.onset=0.92,cfin.adj.up=70,
dfin.onset=0.35,dfin.adj.up=0,dfin.pitch=0,
d2fin.onset=0.8,d2fin.adj.up=0,,d2fin.pitch=pi*10/180,d2fin.thick=10,
afin.onset=0.8,afin.adj.up=20,afin.pitch=pi*15/180,afin.thick=10,
ceph.onset=-0.045,ceph.adj.up=0,ceph.roll=pi/2)
library(paleomass)
paleomass(Folder="Sphyrna",body.axis.l=2,n2=1.8,
ffin.onset=0.3, ffin.adj.up=60,ffin.adj.lat=-60,ffin.roll=pi/4,
ffin.pitch=pi*15/180,
hfin.onset=0.55,hfin.adj.up=60,hfin.adj.lat=-80,hfin.roll=pi/4,
hfin.thick=10,hfin.pitch=pi*10/180,
cfin.onset=0.92,cfin.adj.up=70,
dfin.onset=0.35,dfin.adj.up=0,dfin.pitch=0,
d2fin.onset=0.8,d2fin.adj.up=0,,d2fin.pitch=pi*10/180,d2fin.thick=10,
afin.onset=0.8,afin.adj.up=20,afin.pitch=pi*15/180,afin.thick=10,
ceph.onset=-0.045,ceph.adj.up=0,ceph.roll=pi/2)
paleomass(Folder="Sphyrna",body.axis.l=2,n2=1.8,
ffin.onset=0.3, ffin.adj.up=60,ffin.adj.lat=-60,ffin.roll=pi/4,
ffin.pitch=pi*15/180,
hfin.onset=0.55,hfin.adj.up=60,hfin.adj.lat=-80,hfin.roll=pi/4,
hfin.thick=10,hfin.pitch=pi*10/180,
cfin.onset=0.92,cfin.adj.up=70,
dfin.onset=0.35,dfin.adj.up=0,dfin.pitch=0,
d2fin.onset=0.8,d2fin.adj.up=0,,d2fin.pitch=pi*10/180,d2fin.thick=10,
afin.onset=0.8,afin.adj.up=20,afin.pitch=pi*15/180,afin.thick=10,
ceph.onset=-0.045,ceph.adj.up=0,ceph.roll=pi/2,nn.f=0.2)
library(paleomass)
